server:
  port: 8080

Spring:
  application:
    name: GATEWAY-SERVICE
  cloud:
    gateway:
      routes:
        - id: auth-service
          uri: lb://AUTH-SERVICE
          predicates:
            - Path=/auth/**
        - id: job-service
          uri: lb://JOB-SERVICE
          predicates:
            - Path=/job/**
          filters:
            - keyCloakFilter

  security:
    oauth2:
      client:
        registration:
          oauth2-client-credentials:
            client-id: microservice-auth
            client-secret: chcNR9fYhMr5zDmWq238DxgZ7cyktTZN
            scope: read,write
            provider: auth-service
            authorization-grant-type: password
        provider:
          keycloak:
            issuer-uri: http://localhost:9300/realms/springboot-microservice-realm
            token-uri: http://localhost:9300/realms/springboot-microservice-realm/protocol/openid-connect/token
            end-session-uri: http://localhost:9300/realms/springboot-microservice-realm/protocol/openid-connect/logout
            instrospect-uri: http://localhost:9300/realms/springboot-microservice-realm/protocol/openid-connect/token/introspect

eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://localhost:8761/eureka/
    instance:
      hostname: localhost

#zuul:
#  routes:
#    AUTH-SERVICE:
#      path: /auth/**
#      serviceId: AUTH-SERVICE
#    JOB-SERVICE:
#      path: /job/**
#      serviceId: JOB-SERVICE

