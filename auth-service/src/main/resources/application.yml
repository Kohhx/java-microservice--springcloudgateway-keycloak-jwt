server:
  port: 9200

spring:
  application:
    name: AUTH-SERVICE
  datasource:
    url: jdbc:postgresql://localhost:5432/testauthservicedb
    username: kohhx
    password: kohhx
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: create-drop
    show:
      sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
    database-platform: org.hibernate.dialect.PostgreSQLDialect

  security:
    oauth2:
      client:
        registration:
          oauth2-client-credentials:
            client-id: microservice-auth
            client-secret: chcNR9fYhMr5zDmWq238DxgZ7cyktTZN
            scope: read,write
            provider: auth-service
            authorization-grant-type: password
        provider:
          keycloak:
            issuer-uri: http://localhost:9300/realms/springboot-microservice-realm
            token-uri: http://localhost:9300/realms/springboot-microservice-realm/protocol/openid-connect/token
            end-session-uri: http://localhost:9300/realms/springboot-microservice-realm/protocol/openid-connect/logout
            instrospect-uri: http://localhost:9300/realms/springboot-microservice-realm/protocol/openid-connect/token/introspect

keycloak:
  realm: springboot-microservice-realm
  resource: microservice-auth
  auth-server-url: http://localhost:9300
  ssl-required: external
  public-client: true

eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://localhost:8761/eureka/
    instance:
      hostname: localhost



